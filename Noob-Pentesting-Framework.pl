# *************************************************************************************** #
# ---------------------------------- EULA NOTICE ---------------------------------------- #
#                     Agreement between "Haroon Awan" and "You"(user).                    #
# ---------------------------------- EULA NOTICE ---------------------------------------- #
#  1. By using this piece of software your bound to these point.                          #
#  2. This an End User License Agreement (EULA) is a legal between a software application #
#     author "Haroon Awan" and (YOU) user of this software.                               #
#  3. This software application grants users rights to use for any purpose or modify and  #
#     redistribute creative works.                                                        #
#  4. This software comes in "is-as" warranty, author "Haroon Awan" take no responsbility #
#     what you do with by/this software as your free to use this software.                #
#  5. Any other purpose(s) that it suites as long as it is not related to any kind of     #
#     crime or using it in un-authorized environment.                                     #
#  6. You can use this software to protect and secure your data information in any        #
#     environment.                                                                        #
#  7. It can also be used in state of being protection against the unauthorized use of    #
#     information.                                                                        #
#  8. It can be used to take measures achieve protection.                                 #
# *************************************************************************************** #

#!/usr/bin/perl

use if $^O eq "MSWin32", Win32::Console::ANSI;
#use HTML::LinkExtor;
#use Data::Dumper;
#####$Data::Dumper::Indent=1;
#use HTML::TreeBuilder;
#use WWW::Mechanize;
use Term::ANSIColor;
#use Win32::Console::ANSI;
use Term::ANSIColor qw(:constants);
#use strict;
#use v5.10;
#use WWW::Mechanize::Firefox;
#use WWW::Mechanize::TreeBuilder;
#use HTTP::Cookies;
#use HTML::XSSLint;
use Getopt::Long;
use LWP;
#use HTML::LinkExtor;
#use LWP::Simple;
#use URI::URL;
#use HTML::XSSLint;
#use HTML::Form::XSS;
#use WWW::Mechanize;
#use CGI; 
#use LWP::UserAgent;
#use HTTP::Request::Common;
#use Data::Dump qw/ddx/;
#use WWW::Mechanize::Link;
#use HTTP::Request;
#use LWP::UserAgent;
#use HTTP::Request::Common;
#use HTTP::Status;
#use HTML::Form;
#use IO::Socket;
#use URI::URL;
#use vars qw($opt_a $opt_b $opt_c $opt_d $opt_e $opt_f $opt_g $opt_h $opt_i $opt_j $opt_k $opt_l $opt_m $opt_o $opt_p $opt_q $opt_r $opt_s $opt_t $opt_u $opt_v $opt_w $opt_x $opt_y $opt_z $opt_A $opt_B $opt_C $opt_D $opt_E $opt_F $opt_G $opt_H $opt_I $opt_J $opt_K $opt_L $opt_M $opt_N $opt_O $opt_P);
#use Getopt::Std;
#getopts('a:b:c:d:e:f:g:h:i:j:k:l:m:n:o:p:r:s:t:u:v:w:x:y:z');

#$|=1;

my $ua = LWP::UserAgent->new;
$ua = LWP::UserAgent->new(keep_alive => 1);
$ua->agent("Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31");


GetOptions(
    "h|help" => \$help,
    "a|audit=s" => \$audit,
    "b|extractresponsesheader=s" => \$extractresponsesheader,
    "c|extractimages=s" => \$extractimages,
    "d|extracturls=s" => \$extracturls,
    "e|identifyform=s" => \$identifyform,
    "f|findxssinforms=s" => \$findxssinforms,
    "g|findxssinweb=s" => \$findxssinweb,
    "h|wsmrsa=s" => \$wsmrsa,
    "i|headerinjectpoison=s" => \$headerinjectpoison,
    "j|cachepoisondefacer=s" => \$cachepoisondefacer,
    "k|crlfrsaf=s" => \$crlfrsaf,
    "l|httprsf=s" => \$httprsf,    
    "m|wcdac=s" => \$wcdac,
    "n|httpmethodsinformation" => \$httpmethodsinformation,
    "o|csrfinjection=s" => \$csrfinjection,
    "p|loadcsrfhtmltemplates=s" => \$loadcsrfhtmltemplates,
    "q|shellshock=s" => \$shellshock,
    "r|csrfat=s" => \$csrfat,
    "s|fahttpm=s" => \$fahttpm,
    "t|findxssinparameters=s" => \$findxssinparameters,
    "u|findmissinghttpsmethods=s" => \$findmissinghttpsmethods,
    "v|ssrf=s" => \$ssrf,
    "w|fahttpsmethods=s" => \$fahttpsmethods,
    "x|auditxmlrpc" => \$auditxmlrpc,
    "y|cookiestealer=s" => \$cookiestealer,
    "z|commandinection=s" => \$commandinection,
    "aa|showjson=s" => \$showjson,
    "ab|blindxxeinjection=s" => \$blindxxeinjection,
    "ac|fileupload=s" => \$fileupload,
    "ad|pssti=s" => \$pssti,
    "ae|jsonwebtoken=s" => \$jsonwebtoken,
    "af|shaheenx=s" => \$shaheenx,
    "ag|xss=s" => \$xss,
    "ah|vasl=s" => \$vasl,
    "ai|wback=s" => \$wback,
    "aj|showsvg=s" => \$showsvg,
    "ak|amazons=s" => \$amazon,
       
);

if ($help) { banner();help(); }
if ($audit) { banner();Audit(); }
if ($extractresponsesheader) { banner();Extractresponsesheader(); }
if ($extractimages) { banner();Extractimages(); }
if ($extracturls) { banner();Extracturls(); }
if ($identifyform) { banner();Identifyform(); }
if ($findxssinforms) { banner();Findxssinforms();}
if ($findxssinweb) { banner();Findxssinweb();}
if ($wsmrsa) { banner();Wsmrsa(); }
if ($headerinjectpoison) { banner();Headerinjectpoison(); }
if ($cachepoisondefacer) { banner();Cachepoisondefacer(); }
if ($crlfrsaf) { banner();Crlfrsaf(); }
if ($httprsf) { banner();Httprsf(); }
if ($wcdac) { banner();Wcdac(); }
if ($httpmethodsinformation) { banner();Httpmethodsinformation(); }
if ($csrfinjection) { banner();Csrfinjection(); }
if ($loadcsrfhtmltemplates) { banner();Loadcsrfhtmltemplates(); }
if ($shellshock) { banner();Shellshock(); }
if ($csrfat) { banner();Csrfat(); }
if ($fahttpm) { banner();Fahttpm(); }
if ($findxssinparameters) { banner();Findxssinparameters(); }
if ($findmissinghttpsmethods) { banner();Findmissinghttpsmethods(); }
if ($ssrf) { banner();Ssrf(); }
if ($fahttpsmethods) { banner();Fahttpsmethods(); }
if ($auditxmlrpc) { banner();Auditxmlrpc(); }
if ($cookiestealer) { banner();Cookiestealer(); }
if ($commandinection) { banner();Commandinjection();}
if ($showjson) { banner();Showjson();}
if ($blindxxeinjection) { banner();Blindxxeinjection(); }
if ($fileupload) { banner();Fileupload(); }
if ($pssti) { banner();Pssti(); }
if ($jsonwebtoken) { banner();Jsonwebtoken(); }
if ($webdeva) { banner();Webdeva(); }
if ($shaheenX) { banner();ShaheenX(); }
if ($xss) { banner();Xss(); }
if ($vasl) { banner();Vasl(); }
if ($wback) { baner();Wback(); }
if ($showsvg) { banner();Showsvg(); }
if ($Amazons) { banner();Amazons(); }

unless (@ARGV > 1) { banner();menu(); }


#--------------------------------------------------------------#
#                            Help                              #
#--------------------------------------------------------------#
sub help {
    print line_u(),color('bold cyan'),"#                   ";
    print item('0'),"help ";
    print color('bold red'),"=> ";
    print color("bold white"),"noob -hh site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('1'),"Convert address in arpa format to classical format ";
    print color('bold red'),"=> ";
    print color("bold white"),"noob -a site.com";
    print color('bold cyan'),"                   #   \n";
;
    print color('bold cyan'),"#                   ";
    print item('2'),"Subdomains of a given domain from https://crt.sh ";
    print color('bold red'),"=> ";
    print color("bold white"),"noob -b site.com";
    print color('bold cyan'),"                   #   \n";
;
    print color('bold cyan'),"#                   ";
    print item('3'),"Test port of a given IP range with netcat, by default: 3389 and 5900 ";
    print color('bold red'),"=> ";
    print color("bold white"),"noob -c site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('4'),"Perform brute force through wordlist to find subdomains ";
    print color('bold red'),"=> ";
    print color("bold white"),"noob -d site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('5'),"Reverse DNS technic on a given IP range to find subdomains ";
    print color('bold red'),"   => ";
    print color("bold white"),"noob -e site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('6'),"Perform brute force through numeric variation to find subdomains ";
    print color('bold red')," => ";
    print color("bold white"),"noob -f site.com";
    print color('bold cyan'),"         #   \n";

    print color('bold cyan'),"#                   ";
    print item('7'),"Apply reverse DNS technic on a given IP range to find subdomains ";
    print color('bold red'),"  => ";
    print color("bold white"),"noob -g site.com";
    print color('bold cyan'),"                   #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('8'),"IP ranges are read from an input file ";
    print color('bold red'),"  => ";
    print color("bold white"),"noob -h site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('9'),"Zone Transfer of a given domain  ";
    print color('bold red'),"  => ";
    print color("bold white"),"noob -i site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('10'),"Extract endpoints from Javascript files, thanks to ZSeano ";
    print color('bold red'),"  => ";
    print color("bold white"),"noob -j site.com";
    print color('bold cyan'),"                   #   \n";

    print color('bold cyan'),"#                   ";
    print item('11'),"Extract links from a given HTML file ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -k site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('12'),"Creates Google dorks for a given domain ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -l site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('13'),"IP address to different format ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -m site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('14'),"IP address from the start to the end ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -n site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('15'),"Zone Transfer on a given list of domains using Fierce ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -o site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('16'),"SMTP user enumeration on a given list of IP address w/ smtp-user-enum ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -p site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('17'),"SMTP user enumeration is possible on given list IP w/ smtp-user-enum ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -q site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('18'),"Nagios Remote Plugin Executor Arbitrary Command Execution w/Metasploit ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -r site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('19'),"Creates words permutation with different separators, output hashes ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -s site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('20'),"Determine what IP are alive in a given range of IP address w/ Netcat ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -t site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('21'),"Determine what IP are alive in a given range of IP address w/ Nmap ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -u site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('22'),"Determine what IP are alive in a given range of IP address w/ Ping ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -v site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('23'),"Determine the open ports of a given IP address using Netcat ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -w site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('24'),"Screenshot of a given url+port using Xvfb ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -x site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('25'),"Perform a very small test of a given IP address ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -y site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('26'),"Generate random IP address inside private network range ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -z site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('27'),"Subdomains using other well known programs (TheHarvester, DNSrecon...) ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -aa site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('28'),"Subdomains of a given domain from https://www.threatcrowd.org ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -ab site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('29'),"Test if an url (subdomain+port) is a web thing ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -ac site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('30'),"Fuzz a given IP address with Netcat ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -ad site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('31'),"Script that try to nicely display waybackurls.py output ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -ae site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('32'),"Perform brute force on a given url that use WebDav using Davtest ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('33'),"Auto Subdomains Extractor ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('34'),"Automatic XSS Finder Package ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('35'),"Auto Extract Cname Records of Victim ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";

    print color('bold cyan'),"#                   ";
    print item('36'),"Way Back Machine Sql Injection Finder ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('37'),"WShow SVG Exploit POCs ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";
    
    print color('bold cyan'),"#                   ";
    print item('38'),"Amazon S3 Buckets Brute Forcer ";
    print color('bold red'),"        => ";
    print color("bold white"),"noob -af site.com";
    print color('bold cyan'),"                 #   \n";

    
#--------------------------------------------------------------#
#                           Banner                             #
#--------------------------------------------------------------#
sub banner {
    if ($^O =~ /MSWin32/) {system("mode con: cols=130 lines=40");system("cls"); }else { system("resize -s 40 130");system("clear"); }


print color('bold green'),"";
print "\n";
system ("cat banner");
print qq { };
color("reset");
print color('reset');
print "                      \033[0;37m\033[0;31m [\033[1;34mNoob Pentesting Framework\033[0;31m]  	  ";
print "\033[0;37m\033[0;31m [\033[1;34mFacebook.com/mubassir.py | Nextwebhack.com | Github.com/haroonawanofficial\033[0;31m]  	  \n\n";
print color('bold cyan'),"	      		";print color('bold yellow on_red')," Programmer: Haroon Awan  "; print color('reset')," \n\n"; 
print color('bold cyan'),"	      	       ";print color('bold yellow on_red')," Collaborated Coder: Gwen   "; print color('reset')," \n\n"; 

}
}

#--------------------------------------------------------------#
#                             Menu                             #
#--------------------------------------------------------------#
sub menu {
    print line_u(),color('bold cyan'),"	|  ";print color('reset'),item('1'),"  Convert address in arpa format to classical format";print color('bold cyan'),"                     |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('2'),"  Subdomains of a given domain from https://crt.sh";print color('bold cyan'),"                      |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('3'),"  Test port of a given IP range with netcat, by default: 3389 and 5900";print color('bold cyan'),"  |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('4'),"  Perform brute force through wordlist to find subdomains";print color('bold cyan'),"               |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('5'),"  Perform brute force through numeric variation to find subdomains";print color('bold cyan'),"      |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('6'),"  Reverse DNS technic on a given IP range to find subdomains";print color('bold cyan'),"            |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('7'),"  Apply reverse DNS technic on a given IP range to find subdomains.";print color('bold cyan'),"     |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('8'),"  IP ranges are read from an input file";print color('bold cyan'),"                                 |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('9'),"  Zone Transfer of a given domain";print color('bold cyan'),"                                       |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('10')," Extract endpoints from Javascript files, thanks to ZSeano";print color('bold cyan'),"             |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('11')," Extract links from a given HTML file.";print color('bold cyan'),"                                 |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('12')," Creates Google dorks for a given domain ";print color('bold cyan'),"                              |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('13')," IP address to different format";print color('bold cyan'),"                                        |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('14')," IP address from the start to the end";print color('bold cyan'),"                                  |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('15')," Zone Transfer on a given list of domains using Fierce";print color('bold cyan'),"                 |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('16')," SMTP user enumeration on a given list of IP address w/ smtp-user-enum";print color('bold cyan')," |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('17')," SMTP user enumeration is possible on given list IP w/ smtp-user-enum";print color('bold cyan'),"  |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('18')," Nagios Remote Plugin Executor Arbitrary Command Execution w/Metasploit";print color('bold cyan'),"| \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('19')," Creates words permutation with different separators, output hashes";print color('bold cyan'),"    |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('20')," Determine what IP are alive in a given range of IP address w/ Netcat";print color('bold cyan'),"  |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('21')," Determine what IP are alive in a given range of IP address w/ Nmap";print color('bold cyan'),"    |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('22')," Determine what IP are alive in a given range of IP address w/ Ping";print color('bold cyan'),"    |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('23')," Determine the open ports of a given IP address using Netcat.";print color('bold cyan'),"          |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('24')," Screenshot of a given url+port using Xvfb.";print color('bold cyan'),"                            |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('25')," Perform a very small test of a given IP address";print color('bold cyan'),"                       |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('26')," Generate random IP address inside private network range.";print color('bold cyan'),"              |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('27')," Subdomains using other well known programs (TheHarvester, DNSrecon...)";print color('bold cyan'),"|   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('28')," Subdomains of a given domain from https://www.threatcrowd.org";print color('bold cyan'),"         |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('29')," Test if an url (subdomain+port) is a web thing";print color('bold cyan'),"                        |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('30')," Fuzz a given IP address with Netcat";print color('bold cyan'),"                                   |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('31')," Script that try to nicely display waybackurls.py output.";print color('bold cyan'),"              |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('32')," Perform brute force on a given url that use WebDav using Davtest";print color('bold cyan'),"      |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('33')," Auto Subdomains Extractor";print color('bold cyan'),"                                             |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('34')," Automatic XSS Finder Package";print color('bold cyan'),"                                          |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('35')," Auto Extract Cname Records of Victim";print color('bold cyan'),"                                  |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('36')," Way Back Machine Sql Injection Finder";print color('bold cyan'),"                                 |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('37')," Show SVG Exploit POCs";print color('bold cyan'),"                                                 |   \n";                    
    print color('bold cyan'),"	|  ";print color('reset'),item('38')," Amazon S3 Buckets Brute Forcer";print color('bold cyan'),"                                        |   \n";
    print color('bold cyan'),"	|  ";print color('reset'),item('0'),"  Exit";print color('bold cyan'),"                                                                  |   \n",line_d();
    print color('bold green'),"\n\nnoob: _>  ";
    print color('reset');
    
    chomp($number=<STDIN>);

    if($number eq '1'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($audit=<STDIN>);
        print "\n";
        Audit();
        enter();
    }if($number eq '2'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($extractresponsesheader=<STDIN>);
        print "\n";
        Extractresponsesheader();
        enter();
    }if($number eq '3'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($extractimages=<STDIN>);
        print "\n";
        Extractimages();
        enter();
    }if($number eq '4'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($extracturls=<STDIN>);
        print "\n";
        Extracturls();
        enter();
    }if($number eq '5'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($identifyform=<STDIN>);
        print "\n";
        Identifyform();
        enter();
    }if($number eq '6'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($findxssinforms=<STDIN>);
        print "\n";
        Findxssinforms();
        enter();
    }if($number eq '7'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($findxssinweb=<STDIN>);
        print "\n";
        Findxssinweb();
        enter();
    }if($number eq '8'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($wsmrsa=<STDIN>);
        print "\n";
        Wsmrsa();
        enter();
    }if($number eq '9'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($headerinjectpoison=<STDIN>);
        print "\n";
        Headerinjectpoison();
        enter();
     }if($number eq '10'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($cachepoisondefacer=<STDIN>);
        print "\n";
        Cachepoisondefacer();
        enter();
    }if($number eq '11'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($crlfrsaf=<STDIN>);
        print "\n";
        Crlfrsaf();
        enter();
    }if($number eq '12'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($httprsf=<STDIN>);
        print "\n";
        Httprsf();
        enter();
    }if($number eq '13'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($wcdac=<STDIN>);
        print "\n";
        Wcdac();
        enter();
    }if($number eq '14'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($httpmethodsinformation=<STDIN>);
        print "\n";
        Httpmethodsinformation();
        enter();        
    }if($number eq '15'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($csrfinjection=<STDIN>);
        print "\n";
        Csrfinjection();
        enter(); 
    }if($number eq '16'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($loadcsrfhtmltemplates=<STDIN>);
        print "\n";
        Loadcsrfhtmltemplates();
        enter();        
    }if($number eq '17'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($shellshock=<STDIN>);
        print "\n";
        Shellshock();
        enter();        
    }if($number eq '18'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($csrfat=<STDIN>);
        print "\n";
        Csrfat();
        enter();
    }if($number eq '19'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($fahttpm=<STDIN>);
        print "\n";
        Fahttpm();
        enter();
    }if($number eq '20'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($findxssinparameters=<STDIN>);
        print "\n";
        Findxssinparameters();
        enter();
    }if($number eq '21'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($findmissinghttpsmethods=<STDIN>);
        print "\n";
        Findmissinghttpsmethods();
        enter();
    }if($number eq '22'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($ssrf=<STDIN>);
        print "\n";
        Ssrf();
        enter();
    }if($number eq '23'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($fahttpsmethods=<STDIN>);
        print "\n";
        Fahttpsmethods();
        enter();
    }if($number eq '24'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($auditxmlrpc=<STDIN>);
        print "\n";
        Auditxmlrpc();
        enter();
    }if($number eq '25'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($cookiestealer=<STDIN>);
        print "\n";
        Cookiestealer();
        enter();
    }if($number eq '26'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($commandinection=<STDIN>);
        print "\n";
        Commandinection();
        enter();
    }if($number eq '27'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($showjson=<STDIN>);
        print "\n";
        Showjson();
        enter();
    }if($number eq '28'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($blindxxeinjection=<STDIN>);
        print "\n";
        Blindxxeinjection();
        enter();
    }if($number eq '29'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($fileupload=<STDIN>);
        print "\n";
        Fileupload();
        enter();
    }if($number eq '30'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pssti=<STDIN>);
        print "\n";
        Pssti();
        enter();
    }if($number eq '31'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($jsonwebtoken=<STDIN>);
        print "\n";
        Jsonwebtoken();
        enter();
    }if($number eq '32'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        Webdeva();
        enter();
     }if($number eq '33'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        ShaheenX();
        enter();
     }if($number eq '34'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        Xss();
        enter();
      }if($number eq '35'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        Vasl();
        enter();
      }if($number eq '36'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        Wback();
        enter();
        }if($number eq '37'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        Showsvg();
        enter();
       }if($number eq '38'){
        banner();
#        print line_u(),color('bold cyan'),"        #";print color('reset'),item(),"Enter Target Website in Absolute Format";print color('bold cyan'),"          #   \n",line_d();
        print color('bold green'),"\n\nnoob: _>  ";
        print color('bold white');
        #chomp($pwebsocket=<STDIN>);
        print "\n";
        Amazons();
        enter();        
   }
      if($number eq '0'){
        exit;
   }
      else{
        banner();
        menu();
   }
}


#-----------------------------------------------#
# 					1                           #
#                                               #
#-----------------------------------------------#
sub Audit( ) {
	print item(), "Enter arpa file : ";
    chomp($arpa=<STDIN>);
	print item(), "Enter Domain    : ";
	chomp($file=<STDIN>);
if (system("./arpa.sh $arpa $file") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}



#-----------------------------------------------#
# 						2                       #
#                                               #
#-----------------------------------------------#
sub Extractresponsesheader( ) {
	#print item(), "Enter Domain : ";
    #chomp($arpa=<STDIN>);
	print item(), "Enter Domain : ";
	chomp($file=<STDIN>);
if (system("php -f certsh.php $file") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}



#-----------------------------------------------#
# 						3                       #
#                                               #
#-----------------------------------------------#
sub Extractimages( ) {
if (system("./detect-vnc-rdp.sh") == 0) {
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
 }


#-----------------------------------------------#
# 						  4                     #
#                                               #
#-----------------------------------------------#
sub Extracturls( ) {
	print item(), "Enter IP Range : ";
    chomp($a=<STDIN>);
	print item(), "Enter Port     : ";
	chomp($b=<STDIN>);
if (system("./dnsenum-brute.sh $a $b") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
} 


#-----------------------------------------------#
#                         5                     #
#                                               #
#-----------------------------------------------#
sub Identifyform( ) {
	print item(), "Enter IP Range : ";
    chomp($a=<STDIN>);
	print item(), "Enter Port     : ";
	chomp($b=<STDIN>);
if (system("./dnsenum-bruten.sh $a $b") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}}



#-----------------------------------------------#
#                          6                    #
#                                               #
#-----------------------------------------------#
sub Findxssinforms( ) {
	print item(), "Enter IP Range : ";
    chomp($a=<STDIN>);
	print item(), "Enter Domain   : ";
	chomp($b=<STDIN>);
if (system("./dnsenum-reverse.sh $a $b") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-----------------------------------------------#
#                    7                          #
#                                               #
#-----------------------------------------------#
sub Findxssinweb( ) {
	print item(), "Enter IP Range : ";
    chomp($a=<STDIN>);
	print item(), "Enter Domain   : ";
	chomp($b=<STDIN>);
if (system("./dnsenum-reverserange.sh $a $b") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-----------------------------------------------#
# 					8						    # 
#                                               #
#-----------------------------------------------#
sub Wsmrsa( ) {
		print item(), "Enter Domain     : ";
	chomp($b=<STDIN>);
 if (system("./dnsenum-zonetransfer $b") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
	}



#-----------------------------------------------#
#                      9                        #
#                                               #
#-----------------------------------------------#
sub Headerinjectpoison ( ) {
	
	if (system("php extract-endpoints.php") == 0) {
    print "\n";
	print item(), "Enter PHP with Options     : ";
	chomp($b=<STDIN>);
    system("$b");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-----------------------------------------------#
#                      10                       #
#                                               #
#-----------------------------------------------#
sub Cachepoisondefacer ( ) {
	
	print item(), "Enter Source File : ";
    chomp($a=<STDIN>);
if (system("php extract_links.php $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-----------------------------------------------#
#                       11                      #
#                                               #
#-----------------------------------------------#
sub Crlfrsaf ( ) {
	
	print item(), "Enter Domain : ";
    chomp($a=<STDIN>);
if (system("php gdorks.php $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
	}
	

#-----------------------------------------------#
#                     12                        #
#                                               #
#-----------------------------------------------#
sub Httprsf ( ) {
	
	print item(), "Enter IP Address : ";
    chomp($a=<STDIN>);
if (system("php ip-converter.php $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
	}


#-----------------------------------------------#
#                            13                 #
#                                               #
#-----------------------------------------------#
sub Wcdac ( ) {
	
	if (system("php ip-listing.php") == 0) {
    print "\n";
	print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-----------------------------------------------#
# 					14                          #
#                                               #
#-----------------------------------------------#
sub Httpmethodsinformation ( ) {
	
	print item(), "Enter IP Address : ";
    chomp($a=<STDIN>);
	if (system("./mass_axfr.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
	}



#-----------------------------------------------#
# 					15    					    #
#                                               #
#-----------------------------------------------#
sub Csrfinjection ( ) {
	
	print item(), "Enter IP File        : ";
    chomp($a=<STDIN>);
	print item(), "Enter Word List File : ";
    chomp($a=<STDIN>);
if (system("./mass-smtp-user-enum-bruteforce.sh $a $b") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
	}




#-----------------------------------------------#
#  						16               		#
#                                               #
#-----------------------------------------------#
sub Loadcsrfhtmltemplates ( ) {
	
	print item(), "Enter IP File : ";
    chomp($a=<STDIN>);
if (system("./mass-smtp-user-enum-check.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-----------------------------------------------#
# 					17 					        #
#                                               #
#-----------------------------------------------#
sub Shellshock ( ) {
	
	print item(), "Enter RHOST To Exploit For Nagios NRPE Arguments : ";
    chomp($a=<STDIN>);
if (system("./nrpe.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
# 								18									            #
#-------------------------------------------------------------------------------#
sub Csrfat ( ) {
	
	print item(), "Enter TExt for Permutation : ";
    chomp($a=<STDIN>);
	if (system("./pass-permut.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}



#-------------------------------------------------------------------------------#
# 							19                              		            #
#-------------------------------------------------------------------------------#
sub Fahttpm ( ) {
	
	if (system("./ping-sweep-nc.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
# 								20					           		            #
#-------------------------------------------------------------------------------#
sub Findxssinparameters ( ) {
	
	if (system("./ping-sweep-nmap.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
# 								21 					                            #
#-------------------------------------------------------------------------------#
sub Findmissinghttpsmethods ( ) {
	
	if (system("./ping-sweep-ping.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
# 								22					                             #
#-------------------------------------------------------------------------------#
sub Ssrf ( ) {
	
	if (system("./portscan-nc.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
# 							23                                                  #
#-------------------------------------------------------------------------------#
sub Fahttpsmethods ( ) {
	
    print item(), "Enter Domain  : ";
    chomp($a=<STDIN>);
   if (system("./screenshit.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
# 							24					              		            #
#-------------------------------------------------------------------------------#
sub Auditxmlrpc ( ) {
	
    print item(), "Enter Domain : ";
    chomp($a=<STDIN>);
	if (system("./unix_classic_networks_checker.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
# 										25                    		            #
#-------------------------------------------------------------------------------#
sub Cookiestealer ( ) {
	
    print item(), "Enter IP : ";
    chomp($a=<STDIN>);
if (system("./ssrf-generate-ip.sh $a") == 0) {
    print "\n";
	print item(), "Success! Result is saved in ssrf_ip.txt \n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
	}


#-------------------------------------------------------------------------------#
# 											26                 		            #
#-------------------------------------------------------------------------------#
sub Commandinection ( ) {
	
	   print item(), "Enter Domain : ";
    chomp($a=<STDIN>);
	if (system("./subdomains_finder.sh $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
# 							27                              		            #
#-------------------------------------------------------------------------------#
sub Showjson ( ) {
	
    print item(), "Enter Domain : ";
    chomp($a=<STDIN>);
	if (system("php subthreat.php $a") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
# 							28					            		            #
#-------------------------------------------------------------------------------#
sub Blindxxeinjection ( ) {
	
	if (system("php testhttp.php") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
# 								29                           		            #
#-------------------------------------------------------------------------------#
sub Fileupload ( ) {
	
if (system("php testhttp2.php") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
# 								30                           		            #
#-------------------------------------------------------------------------------#
sub Pssti ( ) {
	
	if (system("./testnc.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
#								 31                           		            #
#-------------------------------------------------------------------------------#
sub Jsonwebtoken ( ) {	
	if (system("php wayback-analyzer.php") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}

#-------------------------------------------------------------------------------#
#								 32                           		            #
#-------------------------------------------------------------------------------#
sub Webdeva ( ) {	
	if (system("./webdav-brutefoce.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
#								 33                          		            #
#-------------------------------------------------------------------------------#
sub ShaheenX ( ) {
	if (system("./ShaheenX.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}


#-------------------------------------------------------------------------------#
#								 34                          		            #
#-------------------------------------------------------------------------------#
sub Xss ( ) {
	
	print item(), "1 - Screaming Cobra XSS\n";
	print item(), "2 - XSS Python3\n";
	print item(), "Enter Selection : ";
	chomp($selection=<STDIN>);
	if ($selection=~1) {
	if (system("./screamingcobra.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}
if ($selection=~2) {
if (system("python3 xss.py") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
  print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	}
}
}
	
	
####### 35 ######
sub Vasl ( ) {
	if (system("./vasl.sh") == 0) {
    print "\n";
    print item(), "Enter Usage : ";
    chomp($a=<STDIN>);
    system("$a");
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}	

####### 36 ######
sub Wback ( ) {
	print item(), "Caution: \n";
    print item(), "Empty result mean there is no cahced data present\n";
	if (system("./wayback.sh") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}	

####### 37 ######
sub  Showsvg ( ) {
    print "\n";
	print item(), "SVG Pay POC List \n\n";
	if (system("./showsvg.sh") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}	

####### 38 ######
sub Amazons ( ) {
	if (system("./amazons3buckets.sh") == 0) {
    print "\n";
	print item(), "Success!\n";
	}
	else {
	print "\n\n";
	print item(), "Error, Command Failed\n";
	}
}	
	
#--------------------------------------------------------------#
#                            Enter                             #
#--------------------------------------------------------------#
sub enter {
    print "\n";
    print item(),"Press ";
    print color('bold red'),"[";
    print color("bold white"),"ENTER";
    print color('bold red'),"] ";
    print color("bold white"),"To Continue\n";

    local( $| ) = ( 1 );

    my $resp = <STDIN>;
    banner();
    menu();
}

#--------------------------------------------------------------#
#                             Format                           #
#--------------------------------------------------------------#
sub item
{
    my $n = shift // '!';
    return color('bold red')," ["
    , color('bold green'),"$n"
    , color('bold red'),"] "
    , color("bold white")
    ;
}

sub line_u
{
    return 
    color('bold cyan'),"	#-------------------------------------------------------------------------------# \n",
    "	#                                                                               # \n";
    
}

sub line_d
{
    return
    color('bold cyan'),"	#                                                                               # \n",
    color('bold cyan'),"	#-------------------------------------------------------------------------------# ",
    "                                                                    ";
}
#--------------------------------------------------------------#
#                          ~~The End~~                         #
#--------------------------------------------------------------#
